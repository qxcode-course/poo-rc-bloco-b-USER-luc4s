{
    "patches": [
        {
            "label": "2025-10-27_11-49-40",
            "content": "class Grafite:\n    def __init__(self, thickness: float, hardness: str, size: int):\n        self.thickness = thickness\n        self.hardness = hardness\n        self.size = size\n\n    def usagePerSheet(self) -> int:\n        if self.hardness == \"HB\":\n            return 1\n        if self.hardness == \"2B\":\n            return 2\n        if self.hardness == \"4B\":\n            return 4\n        if self.hardness == \"6B\":\n            return 6\n        \n    def __str__(self):\n        return f\"{self.thickness}:{self.hardness}:{self.size}\"\n    \nclass Pencil:\n    def __init__(self, thickness: float):\n        self.thickness = thickness\n        self.grafite = None\n\n    def inserir(self, grafite: Grafite):\n        if self.grafite is None:\n            print(\"fail: ja existe grafite\")\n            return\n        if grafite.thickness != self.thickness:\n            print(\"fail: calibre incompativel\")\n            return\n        self.grafite = grafite\n\n    def remover(self):\n        if self.grafite is not None:\n            print(\"fail: nao existe grafite\")\n            return\n        print(f\"removido {self.grafite}\")\n        return\n    \n    def writePage(self):\n        if self.grafite is None:\n            print(\"fail: nao existe grafite\")\n            return\n        if self.grafite <= 10:\n            print(\"fail: tamanho insuficiente\")\n            return\n        gasto = self.grafite.usagePerSheet()\n        tamanho_final = self.grafite.size - gasto\n        if tamanho_final > 10:\n            self.self.grafite.size -= gasto\n            print(\"folha escrita\")\n        else:\n            self.grafite.size = 10\n            print(\"fail: folha incompleta\")",
            "lines": "55"
        }
    ]
}